---
import FormattedDate from "@/components/FormattedDate.astro";
import { getLangFromUrl, getLink } from "@/i18n/utils";
import DefaultLayout from "@/layouts/DefaultLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  return [
    {
      params: { lang: "fr", slug: "articles" },
    },
    {
      params: { lang: "en", slug: "articles" },
    },
  ];
}

const currentLang = getLangFromUrl(Astro.url);

const posts = (await getCollection("articles"))
  .filter((post) => post.id.includes(currentLang))
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

const getLinkPost = (slug: string, folder: string) => {
  const path = slug.slice(2);
  return getLink(currentLang, `${folder}${path}`);
};
---

<DefaultLayout>
  <style>
    main {
      width: 960px;
    }
    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      list-style-type: none;
      margin: 0;
      padding: 0;
    }
    ul li {
      width: calc(50% - 1rem);
    }
    ul li * {
      text-decoration: none;
      transition: 0.2s ease;
    }
    ul li:first-child {
      width: 100%;
      margin-bottom: 1rem;
      text-align: center;
    }
    ul li:first-child img {
      width: 100%;
    }
    ul li:first-child .title {
      font-size: 2.369rem;
    }
    ul li img {
      margin-bottom: 0.5rem;
      border-radius: 12px;
    }
    ul li a {
      display: block;
    }
    .title {
      margin: 0;
      color: rgb(var(--black));
      line-height: 1;
    }
    .date {
      margin: 0;
      color: rgb(var(--gray));
    }
    ul li a:hover h4,
    ul li a:hover .date {
      color: rgb(var(--accent));
    }
    ul a:hover img {
      box-shadow: var(--box-shadow);
    }
    @media (max-width: 720px) {
      ul {
        gap: 0.5em;
      }
      ul li {
        width: 100%;
        text-align: center;
      }
      ul li:first-child {
        margin-bottom: 0;
      }
      ul li:first-child .title {
        font-size: 1.563em;
      }
    }
  </style>
  <section>
    <ul>
      {
        posts.map((post) => (
          <li>
            <a href={getLinkPost(post.slug, post.data.folder)}>
              <img
                width={720}
                height={360}
                src={`${import.meta.env.BASE_URL}${post.data.heroImage}`}
                alt=""
              />
              <h4 class="title">{post.data.title}</h4>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</DefaultLayout>
