---
import { getLangFromUrl, getLink, useTranslations } from "@/i18n/utils";
import appConfig from "app.config";
import { getCollection } from "astro:content";

const langs = appConfig.langs;

const potentialPath = appConfig.langs.map((lang) => {
  const slugArray = Astro.url.pathname
    .replace(import.meta.env.BASE_URL, "")
    .split("/")
    .splice(2);
  return slugArray.length ? lang + "/" + slugArray.join("/") : lang;
});

const getPathDoc = (slug: string, folder: string) => {
  const slugArray = slug.split("/");
  slugArray.splice(1, 0, folder);
  return slugArray.join("/");
};

const allData = await getCollection("articles");

/**
 * Permet de filtrer si l'article est disponible dans plusieurs langues.
 * Le résultat des boutons est retourné dans ordre du tableau de configuration "appConfig.langs" fr/using-mdx
 */
const getLangs = allData.filter((doc) => {
  return potentialPath.includes(getPathDoc(doc.slug, doc.data.folder));
});
---

<ul>
  {
    getLangs.map((doc) => (
      <li>
        <a
          href={`${import.meta.env.BASE_URL}/${getPathDoc(doc.slug, doc.data.folder)}`}
        >
          {langs.find((lang) => doc.slug.includes(lang))?.toUpperCase()}
        </a>
      </li>
    ))
  }
</ul>
